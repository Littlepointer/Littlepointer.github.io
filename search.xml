<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Love Memory</title>
      <link href="/post/1f35d885.html"/>
      <url>/post/1f35d885.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码不太对, 请再试试。" data-whm="抱歉, 这个文章不能被纠正, 请联系我。">  <script id="hbeData" type="hbeData" data-hmacdigest="341aab28ca841d0ad3751f8d8d98c0935a147092991b29e3f2d54ecd9da0fc4b"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码哦~</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>尝试性实验</title>
      <link href="/post/c258e5a9.html"/>
      <url>/post/c258e5a9.html</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h1 id="前言部分"><a href="#前言部分" class="headerlink" title="前言部分"></a>前言部分</h1><p>可以看菜鸟的Markdown 高级技巧:<br><a href="https://www.runoob.com/markdown/md-advance.html">https://www.runoob.com/markdown/md-advance.html</a>    包括画<strong>流程图</strong>这种</p><p>还有知乎的Markdown纯文本进阶语法：<br><a href="https://zhuanlan.zhihu.com/p/99319314">https://zhuanlan.zhihu.com/p/99319314</a>       <a href="Markdown纯文本进阶语法">点这里是我自己整理的</a></p><p>还有一个非常详细的教程：<br><a href="http://www.imooc.com/wiki/markdownlesson/markdowntable.html">http://www.imooc.com/wiki/markdownlesson/markdowntable.html</a></p><p>可以<strong>折叠标题</strong>或者<strong>折叠缩进</strong></p><p><mark></p><p><font  color="red"  size="3"><br><b><br>P.S.  <br/><br>直接复制网页可以获得其Markdown格式的文本直接粘贴</b></font><br>&lt;/mark&gt;</p><p>^eb0ee0</p><p>上面的<strong>HTML</strong>语言实现：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mark</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span>  <span class="attr">color</span>=<span class="string">&quot;red&quot;</span>  <span class="attr">size</span>=<span class="string">&quot;3&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">b</span>&gt;</span></span><br><span class="line">P.S. <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">直接复制网页可以获得其Markdown格式的文本直接粘贴</span><br><span class="line"><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mark</span>&gt;</span></span><br></pre></td></tr></table></figure></p><hr><h1 id="一些基础的Markdown语法"><a href="#一些基础的Markdown语法" class="headerlink" title="一些基础的Markdown语法"></a>一些基础的Markdown语法</h1><h1 id="这是一级标题"><a href="#这是一级标题" class="headerlink" title="这是一级标题"></a>这是一级标题</h1><h2 id="这是二级标题"><a href="#这是二级标题" class="headerlink" title="这是二级标题"></a>这是二级标题</h2><h3 id="这是三级标题"><a href="#这是三级标题" class="headerlink" title="这是三级标题"></a>这是三级标题</h3><h6 id="最多可以达到6级标题"><a href="#最多可以达到6级标题" class="headerlink" title="最多可以达到6级标题"></a>最多可以达到6级标题</h6><hr><h2 id="加粗与斜体"><a href="#加粗与斜体" class="headerlink" title="加粗与斜体"></a>加粗与斜体</h2><p><strong>字体加粗</strong>：采用<strong> </strong>  或者 Ctrl+B</p><p><em>斜体</em> ：采用<em> </em>  或者 Ctrl+I</p><p><strong><em>斜体加粗</em></strong>：采用<strong><em>    </em></strong>   或者 先按Ctrl+B再按Ctrl+I</p><h2 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h2><p><del>删除线</del>： 采用~~  ~~  </p><h2 id="高亮"><a href="#高亮" class="headerlink" title="高亮"></a>高亮</h2><p>==要高亮这句话==，采用<code>==  ==</code></p><hr><h2 id="列表（有序和无序）"><a href="#列表（有序和无序）" class="headerlink" title="列表（有序和无序）"></a>列表（有序和无序）</h2><p>有序列表：按1.后接空格，对于缩进，直接行尾按Tab键就可以实现</p><ol><li>这是第一个有序列表</li><li>这是第二个有序列表</li><li>这是第三个有序列表<ol><li>这是第四个有序列表</li></ol></li></ol><p>无序列表：按-后接空格</p><ul><li>这是第一个无序列表</li><li>这是第二个无序列表</li><li>这是第三个无序列表<ul><li>这是第四个无序列表</li></ul></li></ul><hr><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><p>引用：按&gt;后接一个空格</p><blockquote><p>我是某某某，来自哪儿<br>喜欢做什么<br>这就是引用</p></blockquote><h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><p>创建链接：按<code>[前年写网址赋予的文字](外面写url或者笔记的文件名)</code><br>比如：<a href="半监督学习">这是半监督学习笔记的链接</a><br>比如：<a href="https://www.bilibili.com/video/BV1yb4y1x7UP/?spm_id_from=pageDriver&amp;vd_source=4fbb488cdf49e9769954cbffb9551b56">这是看b站学习Obsidian网址</a></p><hr><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>代码：按` 3次即可，` 可以按\进行转义字符的操作<br>无指定格式的代码：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">比如这是一段代码</span><br></pre></td></tr></table></figure></p><h3 id="python代码："><a href="#python代码：" class="headerlink" title="python代码："></a>python代码：</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;hello word!&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="matlab代码："><a href="#matlab代码：" class="headerlink" title="matlab代码："></a>matlab代码：</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">clear;clc</span><br><span class="line">x=<span class="built_in">linspace</span>(<span class="number">0</span>,<span class="number">100</span>,<span class="number">100</span>)</span><br><span class="line">y=x</span><br><span class="line"><span class="built_in">plot</span>(x,y)</span><br></pre></td></tr></table></figure><h3 id="C代码："><a href="#C代码：" class="headerlink" title="C代码："></a>C代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> a=<span class="number">1</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">double</span> i=<span class="number">100.0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;hello world!&quot;</span>);</span><br></pre></td></tr></table></figure><h3 id="C-代码："><a href="#C-代码：" class="headerlink" title="C++代码："></a>C++代码：</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span> </span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std; </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Hello World&quot;</span>; <span class="comment">// 输出 Hello World </span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h3 id="C-代码：-1"><a href="#C-代码：-1" class="headerlink" title="C#代码："></a>C#代码：</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;  </span><br><span class="line"><span class="keyword">namespace</span> <span class="title">HelloWorldApplication</span>  </span><br><span class="line">&#123;  </span><br><span class="line">   <span class="keyword">class</span> <span class="title">HelloWorld</span>  </span><br><span class="line">   &#123;  </span><br><span class="line">      <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span>  </span><br><span class="line">      &#123;  </span><br><span class="line">         <span class="comment">/* 我的第一个 C# 程序*/</span>  </span><br><span class="line">         Console.WriteLine(<span class="string">&quot;Hello World&quot;</span>);  </span><br><span class="line">         Console.ReadKey();  </span><br><span class="line">      &#125;  </span><br><span class="line">   &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="R代码："><a href="#R代码：" class="headerlink" title="R代码："></a>R代码：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">rm<span class="punctuation">(</span><span class="built_in">list</span><span class="operator">=</span>ls<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">table <span class="operator">=</span> data.frame<span class="punctuation">(</span>  </span><br><span class="line">    姓名 <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;张三&quot;</span><span class="punctuation">,</span> <span class="string">&quot;李四&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span>  </span><br><span class="line">    工号 <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;001&quot;</span><span class="punctuation">,</span><span class="string">&quot;002&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span>  </span><br><span class="line">    月薪 <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">1000</span><span class="punctuation">,</span> <span class="number">2000</span><span class="punctuation">)</span>  </span><br><span class="line">    <span class="punctuation">)</span>  </span><br><span class="line">print<span class="punctuation">(</span>table<span class="punctuation">)</span> <span class="comment"># 查看 table 数据</span></span><br><span class="line"></span><br><span class="line">rec <span class="operator">&lt;-</span> <span class="built_in">list</span><span class="punctuation">(</span>name<span class="operator">=</span><span class="string">&quot;李明&quot;</span><span class="punctuation">,</span> age<span class="operator">=</span><span class="number">30</span><span class="punctuation">,</span></span><br><span class="line">  scores<span class="operator">=</span><span class="built_in">c</span><span class="punctuation">(</span><span class="number">85</span><span class="punctuation">,</span> <span class="number">76</span><span class="punctuation">,</span> <span class="number">90</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">rec</span><br></pre></td></tr></table></figure><h3 id="latex代码：直接"><a href="#latex代码：直接" class="headerlink" title="latex代码：直接$$  $$"></a>latex代码：直接$$  $$</h3><script type="math/tex; mode=display">\begin{aligned}\mathbf{I}_{t} &=\sigma\left(\mathbf{X}_{t} \mathbf{W}_{x i}+\mathbf{H}_{t-1} \mathbf{W}_{h i}+\mathbf{b}_{i}\right) \\\mathbf{F}_{t} &=\sigma\left(\mathbf{X}_{t} \mathbf{W}_{x f}+\mathbf{H}_{t-1} \mathbf{W}_{h f}+\mathbf{b}_{f}\right) \\\mathbf{O}_{t} &=\sigma\left(\mathbf{X}_{t} \mathbf{W}_{x o}+\mathbf{H}_{t-1} \mathbf{W}_{h o}+\mathbf{b}_{o}\right)\end{aligned}</script><h3 id="普通text文本："><a href="#普通text文本：" class="headerlink" title="普通text文本："></a>普通text文本：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$$\sqrt&#123;x&#125; + \sqrt&#123;x^&#123;2&#125;+\sqrt&#123;y&#125;&#125; = \sqrt[3]&#123;k_&#123;i&#125;&#125; - \frac&#123;x&#125;&#123;m&#125;$$</span><br></pre></td></tr></table></figure><h3 id="HTML语言："><a href="#HTML语言：" class="headerlink" title="HTML语言："></a>HTML语言：</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mark</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span>  <span class="attr">color</span>=<span class="string">&quot;red&quot;</span>  <span class="attr">size</span>=<span class="string">&quot;3&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">b</span>&gt;</span></span><br><span class="line">P.S.  <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">直接复制网页可以获得其Markdown格式的文本直接粘贴</span><br><span class="line"><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mark</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Query语言"><a href="#Query语言" class="headerlink" title="Query语言"></a>Query语言</h3><p>==(用于obsidian的内部搜索)==</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">```query</span><br><span class="line">机器学习</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">```query</span><br><span class="line">机器学习</span><br></pre></td></tr></table></figure><p>%%Markdown语言好像就没必要开一个代码块写了%%</p><hr><h2 id="任务列表"><a href="#任务列表" class="headerlink" title="任务列表"></a>任务列表</h2><p>可以见 <a href="https://markdown.com.cn/extended-syntax/task-lists.html">Markdown官方教程</a><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- [x] Write the press release</span><br><span class="line">- [ ] Update the website</span><br><span class="line">- [ ] </span><br><span class="line">- [ ] Contact the media</span><br></pre></td></tr></table></figure><br>就是如下结果：</p><ul><li>[ ] 未完成的事项 </li><li>[x] 已经完成的事项</li></ul><hr><h2 id="打标签"><a href="#打标签" class="headerlink" title="打标签"></a>打标签</h2><h1 id="打一个标签试试"><a href="#打一个标签试试" class="headerlink" title="打一个标签试试"></a>打一个标签试试</h1><p>具体做法#后面不空格就行</p><h1 id="尝试一下做简单的PPT展示"><a href="#尝试一下做简单的PPT展示" class="headerlink" title="尝试一下做简单的PPT展示"></a>尝试一下做简单的PPT展示</h1><p>^c22762</p><p>需要用—-来分割，在本界面右上角点击<code>三个点的标识</code>，再点击<code>开始演示</code></p><hr><p>这是page1</p><hr><p>这是page2</p><hr><p>这是page3</p><hr><h1 id="工作区的用法-workplace"><a href="#工作区的用法-workplace" class="headerlink" title="工作区的用法 ^workplace"></a>工作区的用法 ^workplace</h1><p>点击左侧边框栏的这个按钮<br><img src="Pasted%20image%2020221103164834.png" alt=""></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ARCH模型和GARCH模型</title>
      <link href="/post/46f6f630.html"/>
      <url>/post/46f6f630.html</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h1 id="ARCH模型（自回归条件异方差模型）"><a href="#ARCH模型（自回归条件异方差模型）" class="headerlink" title="ARCH模型（自回归条件异方差模型）"></a>ARCH模型（自回归条件异方差模型）</h1><p>==<strong>Autoregressivee Conditional Heteroskedastic Model</strong>==<br>简称为 ==条件异方差模型==<br><img src="https://obsidian-1314863343.cos.ap-beijing.myqcloud.com/obsidian/pic/20221119104620.png" alt=""><br><img src="https://obsidian-1314863343.cos.ap-beijing.myqcloud.com/obsidian/pic/20221119110919.png" alt=""><br>上面红框中的计算结果是因为：因为$\{\varepsilon _t\}$是平稳列， 所以$Var(\varepsilon _t)=\mathbb{E}\left(\sigma_t^2\right)$为常数。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/post/0.html"/>
      <url>/post/0.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://obsidian-1314863343.cos.ap-beijing.myqcloud.com/obsidian/pic/20221118213144.png" alt=""></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/post/0.html"/>
      <url>/post/0.html</url>
      
        <content type="html"><![CDATA[<h1 id="配对交易特点"><a href="#配对交易特点" class="headerlink" title="配对交易特点"></a>配对交易特点</h1><blockquote><p>第一，配对交易利用了两个<a href="https://wiki.mbalib.com/wiki/%E8%B5%84%E4%BA%A7" title="资产">资产</a>的短暂<a href="https://wiki.mbalib.com/wiki/%E4%BB%B7%E6%A0%BC" title="价格">价格</a>偏离的对称性，进行<a href="https://wiki.mbalib.com/wiki/%E5%AF%B9%E5%86%B2" title="对冲">对冲</a>以获取两个资产的Alpha收益，其核心假设是配对资产的价差具有均值回复性。而这种均值回复是以交易者的非理性行为相关的。因为当<a href="https://wiki.mbalib.com/wiki/%E5%B8%82%E5%9C%BA" title="市场">市场</a>中存在大量这类想法的交易者时，<a href="https://wiki.mbalib.com/wiki/%E8%82%A1%E7%A5%A8%E4%BB%B7%E6%A0%BC" title="股票价格">股票价格</a>会产生上升的惯性，但这种上升惯性仅仅由于这一个非理性因素所驱动，并没有具体实际的<a href="https://wiki.mbalib.com/wiki/%E5%9F%BA%E6%9C%AC%E9%9D%A2" title="基本面">基本面</a>因素支撑，因而<a href="https://wiki.mbalib.com/wiki/%E8%82%A1%E4%BB%B7" title="股价">股价</a>很快会跌落。相反，股价下跌的<a href="https://wiki.mbalib.com/wiki/%E8%82%A1%E7%A5%A8" title="股票">股票</a>也会产生下跌的惯性，当市场的理性因素占据主导时，价格又回复到原先的水平。而如果交易者能够采用配对交易策略，就可以获得这两项<a href="https://wiki.mbalib.com/wiki/%E8%B5%84%E4%BA%A7%E4%BB%B7%E6%A0%BC" title="资产价格">资产价格</a>偏离的收益了。在实际操作中，其执行过程可以简单地描述为：<a href="https://wiki.mbalib.com/wiki/%E6%8A%95%E8%B5%84%E8%80%85" title="投资者">投资者</a>首先选择相互匹配的两个资产，<strong>==当配对资产价格差异增加的时候，做多价格偏低的资产，同时做空价格偏高的资产，而当<a href="https://wiki.mbalib.com/wiki/%E4%BB%B7%E6%A0%BC%E5%B7%AE%E5%BC%82" title="价格差异">价格差异</a>减小的时候，则结束头寸，完成交易==</strong>；同时，为了<a href="https://wiki.mbalib.com/wiki/%E6%8E%A7%E5%88%B6" title="控制">控制</a>风险，当价差进一步扩大时，<a href="https://wiki.mbalib.com/wiki/%E9%9C%80%E8%A6%81" title="需要">需要</a>在适当的<a href="https://wiki.mbalib.com/wiki/%E6%AD%A2%E6%8D%9F%E7%82%B9" title="止损点">止损点</a>结束头寸。</p><p>第二，配对交易是一种市场中性的交易策略。当观察到配对的资产价格差异增大到一定程度时，对价格上升的资产建立<a href="https://wiki.mbalib.com/wiki/%E7%A9%BA%E5%A4%B4" title="空头">空头</a>，对价格下跌的资产建立多头。在<a href="https://wiki.mbalib.com/wiki/%E4%B8%80%E4%BB%B7%E5%AE%9A%E5%BE%8B" title="一价定律">一价定律</a>的作用下，配对资产的价格差异将很快减小。这时，再买入价格下跌的资产对冲之前建立的<a href="https://wiki.mbalib.com/wiki/%E7%A9%BA%E5%A4%B4%E5%A4%B4%E5%AF%B8" title="空头头寸">空头头寸</a>，同时卖出价格上涨的<a href="https://wiki.mbalib.com/wiki/%E8%B5%84%E4%BA%A7" title="资产">资产</a>，获取两项资产的<a href="https://wiki.mbalib.com/wiki/%E6%94%B6%E7%9B%8A" title="收益">收益</a>。就整个过程来看，配对交易在单一资产上都有<a href="https://wiki.mbalib.com/wiki/%E7%B3%BB%E7%BB%9F%E9%A3%8E%E9%99%A9" title="系统风险">系统风险</a>和<a href="https://wiki.mbalib.com/wiki/%E4%B8%AA%E5%88%AB%E9%A3%8E%E9%99%A9" title="个别风险">个别风险</a>，但由于头寸始终是相反的，因此系统风险完全对冲，配对交易整体上只承担了配对资产的个别风险。而在一价定律下，<a href="https://wiki.mbalib.com/wiki/%E4%BB%B7%E6%A0%BC" title="价格">价格</a>对于<a href="https://wiki.mbalib.com/wiki/%E4%BB%B7%E5%80%BC" title="价值">价值</a>的回复使得配对的资产的个别风险直接转换为个别收益。这种收益是于市场无关的。</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
